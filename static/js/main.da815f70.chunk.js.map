{"version":3,"sources":["Components/Container/style.module.css","Components/filter/style.module.css","Components/form/style.module.css","Components/Container/continer.js","Components/form/form.js","Components/filter/filter.js","Components/Phonebook/ContactList.js","App.js","reportWebVitals.js","index.js","Components/Phonebook/style.module.css"],"names":["module","exports","Container","children","className","style","Form","onAddContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","styles","TaskEditor","onSubmit","preventDefault","length","alert","TaskEditor_label","TaskEditor_input","type","onChange","TaskEditor_button","Filter","onChangeFilter","input","ContactList","contacts","onRemoveContact","TaskList","map","contact","TaskList_item","TaskList_button","onClick","id","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","shortid","generate","some","i","target","normolizeF","toLowerCase","includes","getVisibleContacts","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da815f70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"style_Container__EEv4v\",\"button\":\"style_button__2MGBy\",\"active\":\"style_active__Nfreh\",\"disabled\":\"style_disabled__Stpi7\",\"title\":\"style_title__1v3bv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__1CvaI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"style_TaskEditor__2rURy\",\"TaskEditor_label\":\"style_TaskEditor_label__3Retm\",\"TaskEditor_input\":\"style_TaskEditor_input__VOA2d\",\"TaskEditorinput\":\"style_TaskEditorinput__2lBgX\",\"TaskEditor_button\":\"style_TaskEditor_button__KmNeL\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../Container/style.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={style.Container}>{children}</div>\n);\n\nexport default Container;\n\nContainer.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.element).isRequired,\n};\n","// import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./style.module.css\";\nimport {useState} from 'react'\n\n\nexport default function Form({onAddContact}) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n\nconst handleChange = e => {\n  const { name, value } = e.currentTarget;\n\n  switch (name){\n    case 'name': \n    setName(value);\n    break;\n    case 'number': \n    setNumber(value);\n    break;\n    default:return;\n  }\n};\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    if (name.length === 0 || number.length === 0) {\n      alert(\"Fields must be filled!\");\n      return\n    };\n\n    onAddContact({ name, number });\n\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <form className={styles.TaskEditor} onSubmit={handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\n// export default class Form extends Component {\n//   state = {\n//     name: \"\",\n//     number: \"\",\n//   };\n\n//   handleChange = (e) => {\n//     const { name, value } = e.target;\n//     this.setState({\n//       [name]: value,\n//     });\n//   };\n\n//   handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     this.props.onAddContact({ ...this.state });\n\n// console.log('FFFFFFF', this.props.onAddContact)\n\n//     this.setState({ name: \"\", number: \"\" });\n//   };\n//   render() {\n//     return (\n//       <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n//         <label className={styles.TaskEditor_label}>\n//           Name\n//           <input\n//             className={styles.TaskEditor_input}\n//             type=\"text\"\n//             name=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <label className={styles.TaskEditor_label}>\n//           Number\n//           <input\n//             className={styles.TaskEditor_input}\n//             type=\"text\"\n//             name=\"number\"\n//             value={this.state.number}\n//             onChange={this.handleChange}\n//           />\n//         </label>\n//         <button className={styles.TaskEditor_button} type=\"submit\">\n//           Add contact\n//         </button>\n//       </form>\n//     );\n//   }\n// }\n\n// Form.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./style.module.css\";\n\nexport default function Filter({ value, onChangeFilter }) {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={style.input}\n        type=\"text\"\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./style.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \" : \" + contact.number}\n        {\n          <button\n            className={styles.TaskList_button}\n            type=\"button\"\n            name=\"delte\"\n            onClick={() => onRemoveContact(contact.id)}\n            >\n            delete\n          </button>\n        }\n      </li>\n    ))}\n  </ul>\n   \n);\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\n\nimport Container from \"./Components/Container\";\nimport Form from \"./Components/form\";\nimport Filter from \"./Components/filter\";\nimport ContactList from \"./Components/Phonebook\";\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n   return JSON.parse(window.localStorage.getItem(\"contacts\")) ?? []});\n\n   const [ filter, setFilter] = useState('');\n\n    useEffect(() => {\n      window.localStorage.setItem('contacts', JSON.stringify(contacts));\n    }, [contacts]);\n\n  const addContact = ({name, number}) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    contacts.some((i) => i.name === name)\n     ? alert(`${name} is already in contacts`) \n    : setContacts([contact, ...contacts])\n  };\n\n  const changeFilter = (filter) => {\n    setFilter(filter.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normolizeF = filter.toLowerCase();\n    return contacts.filter(({name}) => name.toLowerCase().includes(normolizeF));\n  };\n\n  const removeContact = (contactId) => {\n    setContacts(contacts.filter((i) => i.id !== contactId))\n  };\n\n  return (\n    <>\n      <Container>\n        <h1>Phonebook</h1>\n        <Form onAddContact={addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChangeFilter={changeFilter} />\n        <ContactList\n          contacts={getVisibleContacts()}\n          onRemoveContact={removeContact}\n        />\n      </Container>\n    </>\n  );\n}\n\n// class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   addContact = (task) => {\n  \n//     const searchSameName = this.state.contacts\n//       .map((cont) => cont.name)\n//       .includes(task.name);\n\n//     if (searchSameName) {\n//       alert(`${task.name} is already in contacts`);\n//     } else if (task.name.length === 0) {\n//       alert(\"Fields must be filled!\");\n//     } else {\n//       const contact = {\n//         ...task,\n//         id: shortid.generate(),\n//       };\n\n//       this.setState((prevState) => ({\n//         contacts: [...prevState.contacts, contact],\n//       }));\n//     }\n//   };\n\n//   changeFilter = (filter) => {\n//     console.log(\"filter\", filter)\n//     this.setState({ filter });\n//   };\n\n//   getVisibleContacts = () => {\n//     const { contacts, filter } = this.state;\n\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   removeContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       };\n//     });\n//   };\n\n//   componentDidMount() {\n//     const contact = localStorage.getItem(\"contacts\");\n//     const parsetContact = JSON.parse(contact);\n\n//     if (parsetContact) {\n//       this.setState({ contacts: parsetContact });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevStates = this.state.contacts;\n\n//     if (prevStates !== prevState) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const { filter } = this.state;\n//     const visibleContacts = this.getVisibleContacts();\n\n//     return (\n//       <>\n//         <Container>\n//           <h1>Phonebook</h1>\n//           <Form onAddContact={this.addContact} />\n//           <h2>Contacts</h2>\n//           <Filter value={filter} onChangeFilter={this.changeFilter} />\n//           <ContactList\n//             contacts={visibleContacts}\n//             onRemoveContact={this.removeContact}\n//           />\n//         </Container>\n//       </>\n//     );\n//   }\n// }\n\n// export default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"style_TaskList__3jPCD\",\"TaskList_item\":\"style_TaskList_item__3lLTQ\",\"completed\":\"style_completed__1Tlbr\",\"TaskList_text\":\"style_TaskList_text__2ghWK\",\"TaskList_actions\":\"style_TaskList_actions__t9Kq9\",\"TaskList_button\":\"style_TaskList_button__3jWsJ\"};"],"sourceRoot":""}